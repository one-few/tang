<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.ttcxy.tangtang.mapper.BlogMapper">

    <resultMap id="optionList" type="HashMap">
        <result column="id" property="id"></result>
        <result column="class_name" property="className"></result>
    </resultMap>

    <select id="selectBlog" resultType="net.ttcxy.tangtang.entity.dto.Blog">
      select b.id,title,DATE_FORMAT(create_date,'%Y.%m.%d')  createDate,username,nickname,text,class_name,markdown
        FROM blog b,user u,blog_class c
        where b.state_id = 1
        and u.id = b.user_id
        and b.class_id = c.id
        <if test="cls!=null and cls!=''">
            and b.class_id = #{cls}
        </if>
        order by create_date desc
        limit #{pag},10
    </select>



    <select id="search" resultType="net.ttcxy.tangtang.entity.dto.Blog">
        select * from blog where title LIKE concat("%",#{title},"%")
        limit #{pag},10
    </select>

    <select id="isNotBlog" resultType="int">
        select count(1) from blog where id = #{blogId}
    </select>

    <select id="getBlogByUUIDTextTit" resultType="net.ttcxy.tangtang.entity.dto.Blog">
        select id,title,class_id,markdown,user_id from blog where id = #{blogId}
    </select>

    <select id="selelcLike" resultType="integer">
        SELECT count(*) FROM `like` where user_id =  #{userId} and data_id =#{dataId}
    </select>

    <select id="selelcFavorite" resultType="integer">
        SELECT count(*) FROM `favorite` where user_id =  #{userId} and data_id =#{dataId}
    </select>


    <select id="selectBlogByUUID" resultType="net.ttcxy.tangtang.entity.dto.Blog">
        select b.id,b.title,DATE_FORMAT(b.create_date,'%Y.%m.%d')  createDate,b.text,u.username,nickname,(
            SELECT count(1) FROM `pageview` where data_id = #{uuid}
        ) pageviewCount

        from blog b,user u  where b.user_id = u.id and b.id = #{uuid}
    </select>

    <select id="searchByUsername" resultType="net.ttcxy.tangtang.entity.dto.Blog">
        select *,DATE_FORMAT(create_date,'%Y.%m.%d') createDate from blog b, user u where b.user_id = u.id and username = #{username}
    </select>

    <select id="searchByUserlike" resultType="net.ttcxy.tangtang.entity.dto.Blog">
        select  b.id,b.title,bc.class_name,DATE_FORMAT(b.create_date,'%Y.%m.%d') createDate from `like` l ,user u,blog b,blog_class bc where u.id = l.user_id and b.id = l.data_id and bc.id = b.class_id and u.username = #{username} order by l.create_date desc
    </select>

    <select id="searchByUserfavorite" resultType="net.ttcxy.tangtang.entity.dto.Blog">
        select  b.id,b.title,bc.class_name,DATE_FORMAT(b.create_date,'%Y.%m.%d') createDate from `favorite` l ,user u,blog b,blog_class bc where u.id = l.user_id and b.id = l.data_id and bc.id = b.class_id and u.username = #{username} order by l.create_date desc
    </select>


    <select id="optionList" resultMap="optionList">
        SELECT id,class_name FROM `blog_class`
    </select>

    <insert id="deleteLike">
        DELETE FROM `like` WHERE USER_ID = #{userId} AND DATA_ID = #{dataId}
    </insert>

    <insert id="deleteFavorite">
        DELETE FROM `favorite` WHERE USER_ID = #{userId} AND DATA_ID = #{dataId}
    </insert>


    <insert id="addBlog" parameterType="net.ttcxy.tangtang.entity.dto.Blog">
        insert into blog (id,title,user_id,text,class_id,state_id,create_date,markdown)
        values(#{id},#{title},#{userId},#{text},#{classId},#{stateId},now(),#{markdown})
    </insert>
    <update id="updateBlog" parameterType="net.ttcxy.tangtang.entity.dto.Blog">
        update blog set title = #{title},text = #{text},markdown = #{markdown},class_id = #{classId},state_id = #{stateId},update_date = NOW()
        where id = #{id}
    </update>

    <delete id="deleteBlog">
        DELETE FROM BLOG WHERE ID = #{id}
    </delete>
    <delete id="insertLike">
        INSERT INTO `like` (user_id,data_id,create_date) VALUES (#{userId},#{dataId},NOW())
    </delete>

    <delete id="insertFavorite">
        INSERT INTO `favorite` (user_id,data_id,create_date) VALUES (#{userId},#{dataId},NOW())
    </delete>

</mapper>